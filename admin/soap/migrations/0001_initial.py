# Generated by Django 3.1.2 on 2020-10-09 01:03

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Additive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Fragrance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=100)),
                ('grams_per_liter', models.FloatField()),
                ('note', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lipid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=100)),
                ('lauric', models.IntegerField()),
                ('myristic', models.IntegerField()),
                ('palmitic', models.IntegerField()),
                ('stearic', models.IntegerField()),
                ('ricinoleic', models.IntegerField()),
                ('oleic', models.IntegerField()),
                ('linoleic', models.IntegerField()),
                ('linolenic', models.IntegerField()),
                ('hardness', models.IntegerField()),
                ('cleansing', models.IntegerField()),
                ('conditioning', models.IntegerField()),
                ('bubbly', models.IntegerField()),
                ('creamy', models.IntegerField()),
                ('iodine', models.IntegerField()),
                ('ins', models.IntegerField()),
                ('inci_name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lye',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('kind', models.CharField(choices=[('naoh', 'NaOH'), ('koh', 'KOH')], default='naoh', max_length=4)),
                ('name', models.CharField(max_length=100)),
                ('note', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=100)),
                ('website', models.CharField(max_length=255)),
                ('note', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeLye',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('id', models.CharField(default=uuid.uuid1, max_length=36, primary_key=True, serialize=False)),
                ('weight', models.FloatField()),
                ('concentration', models.FloatField()),
                ('discount', models.FloatField()),
                ('cost', models.FloatField()),
                ('lye', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='soap.lye')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeLipid',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('id', models.CharField(default=uuid.uuid1, max_length=36, primary_key=True, serialize=False)),
                ('percentage', models.FloatField()),
                ('weight', models.FloatField()),
                ('cost', models.FloatField()),
                ('lipid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='soap.lipid')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeFragrance',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('id', models.CharField(default=uuid.uuid1, max_length=36, primary_key=True, serialize=False)),
                ('percentage', models.FloatField()),
                ('weight', models.FloatField()),
                ('fragrance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='soap.fragrance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeAdditive',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('id', models.CharField(default=uuid.uuid1, max_length=36, primary_key=True, serialize=False)),
                ('percentage', models.FloatField()),
                ('weight', models.FloatField()),
                ('cost', models.FloatField()),
                ('additive', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='soap.additive')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('id', models.CharField(default=uuid.uuid1, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('lipidweight', models.FloatField()),
                ('cost', models.FloatField()),
                ('note', models.TextField(blank=True)),
                ('additives', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soap.recipeadditive')),
                ('fragrances', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soap.recipefragrance')),
                ('lipids', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soap.recipelipid')),
                ('lye', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soap.recipelye')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LyeInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('purchase_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField()),
                ('cost', models.FloatField()),
                ('weight', models.FloatField()),
                ('lye', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='soap.lyeinventory')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='soap.supplier')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LipidInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('purchase_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField()),
                ('cost', models.FloatField()),
                ('weight', models.FloatField()),
                ('sap', models.FloatField()),
                ('naoh', models.FloatField()),
                ('koh', models.FloatField()),
                ('grams_per_liter', models.FloatField()),
                ('lipid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='soap.lipid')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='soap.supplier')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FragranceInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('purchase_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField()),
                ('cost', models.FloatField()),
                ('weight', models.FloatField()),
                ('fragrance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='soap.fragrance')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='soap.supplier')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdditiveInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('purchase_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField()),
                ('cost', models.FloatField()),
                ('weight', models.FloatField()),
                ('additive', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='soap.additive')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='soap.supplier')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
