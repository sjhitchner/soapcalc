type Recipe {
	name: String!
	lipids: [LipidValue!]!
	additives: [AdditiveValue!]
	lipidWeight: Float!
	water: Float!
	naoh: Float!
	fragrances: [FragranceValue!]
	discount: Float!
	waterRatio: Float!
	quality: RecipeQuality!
	composition: RecipeComposition!
}

type RecipeComposition {
	lauric: Int!
	myristic: Int!
	palmitic: Int!
	stearic: Int!
	ricinoleic: Int!
	oleic: Int!
	linoleic: Int!
	linolenic: Int!
}

type RecipeQuality {
	hardness: Int!
	cleansing: Int!
	conditioning: Int!
	bubbly: Int!
	creamy: Int!
	iodine: Int!
	ins: Int!
}

type LipidValue {
	lipid: Lipid!
	percentage: Float!
	weight: Float!
}

type FragranceValue {
	fragrance: Fragrance!
	percentage: Float!
	weight: Float!
}

type AdditiveValue {
	additive: Additive!
	percentage: Float!
	weight: Float!
}

type Lipid {
	name: String!
	type: String!
	naoh: Float!
	koh: Float!
	inciName: String!
	gramsPerLiter: Float!
}

type Fragrance {
	name: String!
	gramsPerKg: Float!
}

type Additive {
	name: String!
	gramsPerKg: Float!
}

enum Lye {
  NaOH
  KOH
}

input CreateRecipe {
	lye: Lye!
	lipidWeight: Float!
	lyeConcentration: Float!
	lyeDiscount: Float!
	# fragrances: [FragranceValue!]
	# lipids: [LipidValue!]!
}

type Mutation {
	calculateRecipe(input: CreateRecipe!): Recipe!
}
